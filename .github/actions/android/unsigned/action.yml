name: "Unsigned Android Build Workflow"

description: "Build unsigned APK and push to app branch"

inputs:
  VERSION_NAME:
    description: "Version name from common build"
    required: true
  VERSION_CODE:
    description: "Version code from common build"
    required: true
  GITHUB_TOKEN:
    description: "GitHub token passed from workflow"
    required: true

runs:
  using: "composite"
  steps:
    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version-file: pubspec.yaml
        cache: true

    - name: Fetch Dependencies
      shell: bash
      run: flutter pub get

    - name: Build Unsigned APK
      shell: bash
      run: |
        flutter build apk --release --build-name ${{ inputs.VERSION_NAME }} --build-number ${{ inputs.VERSION_CODE }}
        if [ ! -f build/app/outputs/flutter-apk/app-release.apk ]; then
          echo "Unsigned APK not found. Build might have failed."
          exit 1
        fi

    - name: Create app Branch
      shell: bash
      run: |
        git clone https://x-access-token:${{ inputs.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git apk-temp
        cd apk-temp
        git checkout --orphan app
        git rm -rf . || true

    - name: Store Unsigned APK
      shell: bash
      run: |
        cp build/app/outputs/flutter-apk/app-release.apk apk-temp/magic-epaper-unsigned.apk

    - name: Commit & Push Unsigned APK
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
      run: |
        cd apk-temp
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add .
        git commit -m "[Unsigned APK] v${{ inputs.VERSION_NAME }} (#${{ inputs.VERSION_CODE }})"
        git push --force origin app

    - name: Upload Unsigned APK as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: magic-epaper-unsigned-apk
        path: build/app/outputs/flutter-apk/app-release.apk
